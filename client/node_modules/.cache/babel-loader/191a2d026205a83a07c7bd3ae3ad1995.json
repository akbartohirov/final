{"ast":null,"code":"var _jsxFileName = \"/home/akbar/Desktop/project/client/src/Components/CatalogProductItem.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CatalogProductItem = ({\n  data,\n  title\n}) => {\n  console.log(data);\n  return (\n    /*#__PURE__*/\n    //   <div className=\"card product\">\n    //     <div className=\"product-image\">\n    //       <img\n    //         alt=\"product img\"\n    //         className=\"product-card-img\"\n    //         src=\"https://materializecss.com/images/sample-1.jpg\"\n    //       />\n    //     </div>\n    //     <Link\n    //       className=\"product-content-title card-title \"\n    //       to={`/product/${data._id}`}\n    //     >\n    //       {data.title}\n    //     </Link>\n    //     <div className=\"product-content\">\n    //       <p>\n    //         I am a very simple card. I am good at containing small bits of\n    //         information. I am convenient because I require little markup to use\n    //         effectively.\n    //       </p>\n    //       <h5>Price</h5>\n    //     </div>\n    //     <div className=\"product-action card-action\">\n    //       <span className=\"btn\">В корзину</span>\n    //     </div>\n    //   </div>\n    _jsxDEV(\"div\", {\n      className: \"col s12 m4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://materializecss.com/images/sample-1.jpg\",\n            alt: \"product img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/product/${data._id}`,\n            className: \"card-title\",\n            style: {\n              cursor: \"pointer\"\n            },\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-action\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn waves-effect\",\n            children: \"\\u0412 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0443\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = CatalogProductItem;\nexport default CatalogProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogProductItem\");","map":{"version":3,"sources":["/home/akbar/Desktop/project/client/src/Components/CatalogProductItem.js"],"names":["React","Link","CatalogProductItem","data","title","console","log","_id","cursor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AACE,YAAA,GAAG,EAAC,gDADN;AAEE,YAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,IAAD;AACE,YAAA,EAAE,EAAG,YAAWA,IAAI,CAACI,GAAI,EAD3B;AAEE,YAAA,SAAS,EAAC,YAFZ;AAGE,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAHT;AAAA,sBAKGL,IAAI,CAACC;AALR;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF,eAqBE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAM,YAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AA5BF;AAwDD,CA3DD;;KAAMF,kB;AA6DN,eAAeA,kBAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CatalogProductItem = ({ data, title }) => {\n  console.log(data);\n\n  return (\n    //   <div className=\"card product\">\n    //     <div className=\"product-image\">\n    //       <img\n    //         alt=\"product img\"\n    //         className=\"product-card-img\"\n    //         src=\"https://materializecss.com/images/sample-1.jpg\"\n    //       />\n    //     </div>\n    //     <Link\n    //       className=\"product-content-title card-title \"\n    //       to={`/product/${data._id}`}\n    //     >\n    //       {data.title}\n    //     </Link>\n    //     <div className=\"product-content\">\n    //       <p>\n    //         I am a very simple card. I am good at containing small bits of\n    //         information. I am convenient because I require little markup to use\n    //         effectively.\n    //       </p>\n    //       <h5>Price</h5>\n    //     </div>\n    //     <div className=\"product-action card-action\">\n    //       <span className=\"btn\">В корзину</span>\n    //     </div>\n    //   </div>\n\n    <div className=\"col s12 m4\">\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <img\n            src=\"https://materializecss.com/images/sample-1.jpg\"\n            alt=\"product img\"\n          />\n          <Link\n            to={`/product/${data._id}`}\n            className=\"card-title\"\n            style={{ cursor: \"pointer\" }}\n          >\n            {data.title}\n          </Link>\n        </div>\n        <div className=\"card-content\">\n          <p>\n            I am a very simple card. I am good at containing small bits of\n            information. I am convenient because I require little markup to use\n            effectively.\n          </p>\n        </div>\n        <div className=\"card-action\">\n          <span className=\"btn waves-effect\">В корзину</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CatalogProductItem;\n"]},"metadata":{},"sourceType":"module"}