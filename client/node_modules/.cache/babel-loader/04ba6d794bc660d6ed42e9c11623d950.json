{"ast":null,"code":"var _jsxFileName = \"/home/akbar/Desktop/project/client/src/Components/CatalogProductItem.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CatalogProductItem = ({\n  data,\n  title\n}) => {\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card product\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"product img\",\n        className: \"product-card-img\",\n        src: \"https://materializecss.com/images/sample-1.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"product-content-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-action\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"btn\",\n        children: \"\\u0412 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CatalogProductItem;\nexport default CatalogProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogProductItem\");","map":{"version":3,"sources":["/home/akbar/Desktop/project/client/src/Components/CatalogProductItem.js"],"names":["React","CatalogProductItem","data","title","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AACE,QAAA,GAAG,EAAC,aADN;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAA,kBAAuCC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAiBE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1BD;;KAAMF,kB;AA4BN,eAAeA,kBAAf","sourcesContent":["import React from \"react\";\n\nconst CatalogProductItem = ({ data, title }) => {\n  console.log(data);\n\n  return (\n    <div className=\"card product\">\n      <div className=\"product-image\">\n        <img\n          alt=\"product img\"\n          className=\"product-card-img\"\n          src=\"https://materializecss.com/images/sample-1.jpg\"\n        />\n      </div>\n      <div className=\"product-content\">\n        <h5 className=\"product-content-title\">{title}</h5>\n        <p>\n          I am a very simple card. I am good at containing small bits of\n          information. I am convenient because I require little markup to use\n          effectively.\n        </p>\n        <h5>Price</h5>\n      </div>\n      <div className=\"product-action\">\n        <span className=\"btn\">В корзину</span>\n      </div>\n    </div>\n  );\n};\n\nexport default CatalogProductItem;\n"]},"metadata":{},"sourceType":"module"}