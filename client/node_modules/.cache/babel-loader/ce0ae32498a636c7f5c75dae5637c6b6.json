{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\";\nconst storageName = \"userData\";\nexport const useAuth = () => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [user, setUser] = useState(false);\n  const login = useCallback((jwtToken, id, isAdmin) => {\n    setToken(jwtToken);\n    setUserId(id);\n    setUser(isAdmin);\n    localStorage.setItem(storageName, JSON.stringify({\n      userId: id,\n      token: jwtToken\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(storageName);\n  }, []);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n\n    if (data && data.token) {\n      login(data.token, data.userId);\n    }\n  }, [login]);\n  return {\n    login,\n    logout,\n    token,\n    userId\n  };\n};\n\n_s(useAuth, \"62SOJBC6VFmexLDNxuTMnAl2jk0=\");","map":{"version":3,"sources":["/home/akbar/Desktop/project/client/src/hooks/useAuth.js"],"names":["useState","useCallback","useEffect","storageName","useAuth","token","setToken","userId","setUserId","user","setUser","login","jwtToken","id","isAdmin","localStorage","setItem","JSON","stringify","logout","removeItem","data","parse","getItem"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AAEA,MAAMC,WAAW,GAAG,UAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMW,KAAK,GAAGV,WAAW,CAAC,CAACW,QAAD,EAAWC,EAAX,EAAeC,OAAf,KAA2B;AACnDR,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACAJ,IAAAA,SAAS,CAACK,EAAD,CAAT;AACAH,IAAAA,OAAO,CAACI,OAAD,CAAP;AAEAC,IAAAA,YAAY,CAACC,OAAb,CACEb,WADF,EAEEc,IAAI,CAACC,SAAL,CAAe;AACbX,MAAAA,MAAM,EAAEM,EADK;AAEbR,MAAAA,KAAK,EAAEO;AAFM,KAAf,CAFF;AAOD,GAZwB,EAYtB,EAZsB,CAAzB;AAcA,QAAMO,MAAM,GAAGlB,WAAW,CAAC,MAAM;AAC/BK,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAO,IAAAA,YAAY,CAACK,UAAb,CAAwBjB,WAAxB;AACD,GAJyB,EAIvB,EAJuB,CAA1B;AAMAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqBpB,WAArB,CAAX,CAAb;;AAEA,QAAIkB,IAAI,IAAIA,IAAI,CAAChB,KAAjB,EAAwB;AACtBM,MAAAA,KAAK,CAACU,IAAI,CAAChB,KAAN,EAAagB,IAAI,CAACd,MAAlB,CAAL;AACD;AACF,GANQ,EAMN,CAACI,KAAD,CANM,CAAT;AAQA,SAAO;AAAEA,IAAAA,KAAF;AAASQ,IAAAA,MAAT;AAAiBd,IAAAA,KAAjB;AAAwBE,IAAAA;AAAxB,GAAP;AACD,CAlCM;;GAAMH,O","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [user, setUser] = useState(false);\r\n\r\n  const login = useCallback((jwtToken, id, isAdmin) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n    setUser(isAdmin);\r\n\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({\r\n        userId: id,\r\n        token: jwtToken,\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n    if (data && data.token) {\r\n      login(data.token, data.userId);\r\n    }\r\n  }, [login]);\r\n\r\n  return { login, logout, token, userId };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}